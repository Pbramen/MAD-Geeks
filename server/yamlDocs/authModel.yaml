components:
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Auth
    description: User Authentication and Authorization

definitions:
  userAuth:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
  DBErr:
    description: Internal Database error
    content:
      application/json:
        schema:
          type: object
          properties:
            status: 
              type: string
              description: DB_ERR
            msg: 
              type: string
  MissingParams:
    description: Parameters are missing
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              description: ERROR
            msg: 
              type: string
              description: Missing fields
            action: 
              type: string
              description: None Taken
            errors:
              type: object
              properties:
                fields: 
                  type: array
                  items: 
                    type: string
                    description: List of all missing parameter required for this endpoint.

paths:

  /api/clients/:
    get:
      security:
      - bearerAuth: []
      tags:
        - Auth
      parameters:
        - in: header
          name: credentials
          schema: 
            type: boolean
            value: true
            enum: [true]
          required: true
      summary: Get all registered usernames
      description: For testing purposes only
      responses:
        '200':
          description: Successful response
        '401':
          description: No Access token send
        '403':
          description: Access token is invalid or has expried. Should call /refresh after
  /api/clients/newUser:
    post:
      tags:
        - Auth
      requestBody:
          required: true
          description: Basic user info needed for registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLogin:
                    type: string
                    description: Unquie username
                  password:
                    type: string
                    description: Password
                  DOB: 
                    type: string
                    description: Date of Birth
                  email: 
                    type: string
                    description: Email address of user
      responses:
        '200':
          description: Success
          content: 
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: ok
                  msg:
                    type: string
                    description: <username> successfully created!
                  link: 
                    type: string
                    description: /login
        '409':
          description: Username/ Email already taken.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path: 
                          type: string
                          description: email | username
                        message: 
                          type: string
                          description: Error message
                        value:
                          type: string
                          description: duplicate value
        '422':
          $ref: '#/definitions/MissingParams'
        '500':
          $ref: '#/definitions/DBErr'
  /api/clients/validateAuth:
    post:
      tags:
        - Auth
      requestBody:
          required: true
          description: password/username combination
          content:
            application/json:
              schema:
                $ref: '#/definitions/userAuth'
      responses:
        '200':
          description: Sets httpOnly refresh token as a cookie and returns an access token
          heaers:
            Set-Cookie:
              schema:
                type: string
                example: jwt=abcdef123456890; HttpOnly
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    description: SUCCESS
                  msg:
                    type: string
                    description: AUTH_OK
                  link:
                    type: string
                    description: /home
                  roles:
                    type: array
                    items: 
                      type: string
                  accessToken: 
                    type: string
        '401':
          description: Invalid User login
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    description: DENIED
                  msg:
                    type: string
                    description: Invalid combination
                  link:
                    type: string
                    description: /login
        '403':
          description: Account denied access (banned or tempoarily set inactive)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    description: DENIED
                  msg:
                    type: string
                    description: ACC_DISABLED | ACC_BANNED
                  link:
                    type: string
                    description: /accountDiabled | /accountBanned
        '404':
            description: Username not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status: 
                      type: string
                      description: DNE
                    msg:
                      type: string
                      description: Not registered
                    link:
                      type: string
                      description: /register
        '422':
          $ref: '#/definitions/MissingParams'
        '500':
          $ref: '#/definitions/DBErr'
  /api/clients/refresh:
    get:
      summary: Refreshes the access token
      tags:
        - Auth
      parameters:
        - in: cookie
          name: jwt
          required: true
          schema: 
            type: string
            example: jwt=abcdef012345
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  access_token:
                    type: string
                    description: New access token for authenticated user.
                    example: abcdef12345
        '401':
          description: Missing valid credentials
          summary: Refresh token was not sent to server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Unauthorized request
        '403':
          description: Refresh token found, but not valid/expired.
  /api/clients/logout:
    delete:
      description: Handles user logout
      parameters:
        - in: cookie
          name: jwt
          description: HttpOnly Refresh token
          schema:
            type: string
            example: abcdef12345
      responses:
        '200':
          description: User successfully logged out and refresh token deleted.
          content:
            application/json:
              schema:
                type: object
                properties: 
                  status: 
                    type: string
                    example: ok
                  msg:
                    type: string
                    example: You have successfully logged out!
                  link:
                    type: string
                    example: /home
        '203':
          description: Deletes invalid/expried refresh token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: Ok
                  msg:
                    type: string
                    example: You have successfully logged out!
                  link: 
                    type: string
                    example: /home
        '204':
          description: No refresh token found. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: string
                    example: Ok
                  msg:
                    type: string
                    example: User already logged out.
                  link: 
                    type: string
                    example: /login
        '500':
          description: Failed to access database
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: DB_Failure
                  msg:
                    type: string
                    example: Server failure. Please try again.
    